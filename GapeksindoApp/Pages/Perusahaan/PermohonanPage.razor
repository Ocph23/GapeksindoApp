@layout Layouts.PerusahaanLayout
@page "/perusahaan/permohonan"

@using Microsoft.AspNetCore.Identity
@inject IVersionProvider VersionProvider
@inject ApplicationDbContext dbcontext
@inject NavigationManager nav
@inject UserManager<IdentityUser> _userManager;
@inject IMessageService MessageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JS

<div class="noprint">
    <Heading Size="HeadingSize.Is1" Margin="Margin.Is3.FromBottom">Data Permohonan</Heading>
    <Button style="text-align:right;" Color="Color.Primary"
        Clicked="@(()=> nav.NavigateTo("/perusahaan/permohonan/0"))">Tambah</Button>
    <DataGrid TItem="Permohonan" Data="@Permohonans" ReadData="@OnReadData" TotalItems="@totalPermohonans" PageSize="10"
        ShowPager Responsive>
        <DataGridColumn Field="@nameof(Permohonan.Id)" Caption="#" Sortable="false">
            <DisplayTemplate>
                @context.Id.ToString("D4")
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn Field="@nameof(Permohonan.Tanggal)" Caption="Tanggal" Editable>
            <DisplayTemplate>
                @context.Tanggal.Value.ToString("dd-MM-yyyy")
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn Field="@nameof(Permohonan.Nomor)" Caption="Nomor" Editable />
        <DataGridColumn Field="@nameof(Permohonan.Keterangan)" Caption="Keterangan" Editable />
        <DataGridColumn Field="@nameof(Permohonan.Status)" Caption="Status" Editable />
        <DataGridColumn Width="150px" Caption="Aksi">
            <DisplayTemplate>
                <Icon class="btn btn-outline-warning" Name="IconName.Edit"
                    Clicked="@(()=> nav.NavigateTo($"/perusahaan/permohonan/{context.Id}"))" />
                @if (context.Status == StatusPermohonan.Verifikasi)
                {
                    <Icon class="btn btn-outline-success" Name="IconName.Print" Clicked="@(()=> Print(context))" />
                }
                else
                {
                    <Icon class="btn btn-outline-danger" Name="IconName.Delete" Clicked="@(()=> Delete(context))" />
                }
            </DisplayTemplate>
        </DataGridColumn>
    </DataGrid>
</div>

@if (printModel != null)
{
    <div class="justprint">
        <div style="width:100%; display:flex; justify-content:space-betwen">
            <div style="width:70%; display: flex; justify-content:end">
                <div class="dewan" style="display: flex; flex-direction:column; align-items:end;">
                    <h4> DEWAN PIMPINAN DAERAH</h4>
                    <h4> PROPINSI PAPUA</h4>
                </div>
            </div>
            <div style="padding:5px; width:30%; display:flex; display: flex; align-items: center;flex-direction: column; ">
                <img style="width: 50px;" src="./brand-logo.png" />
                <div class="logoName">GABUNGAN </div>
                <div class="logoName">PERUSAHAAN KONSTRUKSI NASIONAL</div>
                <div class="logoName">INDONESIA</div>
                <div class="logoName">THE UNION OF NATIONAL INDONESIA </div>
                <div class="logoName">CONSTRUCTION COMPANIES</div>
            </div>
        </div>

        <div>
            <center class="mt-3">
                <h6>BERITA ACARA</h6>
                <h6>VERIFIKASI DAN VALIDASI AWAL PERMOHONAN REGISTRASI SBU</h6>
                <h6>NOMOR : @printModel.Nomor</h6>
            </center>
            <p class="mt-5">Pada hari ini @(Helper.GetWeekName(printModel.TanggalDitetapkan)), tanggal tahun ....., yang bertanda tangan di bawah ini : </p>
            <table style="width: 80%; margin-left:50px">
                <tr>
                    <td style="width: 150px;">Nama</td>
                    <td style="width: 20px;">:</td>
                    <td>BOB SOUWELA, Sm.Hk</td>
                </tr>
                <tr>
                    <td>Jabatan</td>
                    <td>:</td>
                    <td>ketua Umum</td>
                </tr>
                <tr>
                    <td>Alamat</td>
                    <td>:</td>
                    <td>Jln. Ahmad Yani Kloofkamp RT 3 RW 2 Kel. Guerahbesi Jayapura Utara</td>
                </tr>
            </table>
            <p class="mt-3">Menjalan jabatan tersebut dan oleh karena itu bertindak dan atas nama GAPEKSINDO. </p>
            <p>Berdasarkan peraturan LPJK Nasional Nomor 10 tahun 2013 tentang registrasi usaha jasa
                pelaksana konstruksi dengan ini menyampaikan keabsahan atas kelengkapan permohonan registrasi SBU</p>

            <table style="width: 80%; margin-left:50px">
                <tr>
                    <td style="width: 150px;">Nama Perusahaan</td>
                    <td style="width: 20px;">:</td>
                    <td>@printModel.Perusahaan.FullName</td>
                </tr>
                <tr>
                    <td style="width: 150px;">Nama Pimpinan</td>
                    <td>:</td>
                    <td>@printModel.Perusahaan.Pimpinan</td>
                </tr>
                <tr>
                    <td style="width: 150px;">Alamat</td>
                    <td>:</td>
                    <td>@printModel.Perusahaan?.Alamat</td>
                </tr>
                <tr>
                    <td style="width: 150px;">Kabupaten</td>
                    <td>:</td>
                    <td>@printModel.Perusahaan?.Kabupaten.Nama</td>
                </tr>
                <tr>
                    <td style="width: 150px;">Propinsi </td>
                    <td>:</td>
                    <td>Papua</td>
                </tr>
            </table>
            <p class="mt-3">Demikian Berita Acara ini dibuat untuk dapat dipergunakan sebagai pertimbangan untuk pelaksanaan
                registrasi
                SBU Badan Usaha tersebut. </p>
            <div class="mt-5" style="width: 100%; display:flex;justify-content:end">
                <table style="width: 50%; ">
                    <tr>
                        <td>Dikeluarkan di </td>
                        <td>:</td>
                        <td>Jayapura</td>
                    </tr>
                    <tr>
                        <td>Pada Tanggal </td>
                        <td>:</td>
                        <td>@(printModel.TanggalDitetapkan!=null?printModel.TanggalDitetapkan.Value.ToString("dd-MM-yyyy"):"")</td>
                    </tr>
                    <tr></tr>
                    <tr></tr>
                    <tr></tr>
                    <tr>
                        <td style="padding-top: 100px;">BOB SOUWELA, Sm.Hk</td>
                    </tr>
                    <tr>
                        <td>Ketua Umum</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
}

@code {
    private Modal modalRef;

    Permohonan model = new Permohonan();
    Permohonan printModel ;
    private List<Permohonan> Permohonans;
    private Perusahaan perusahaan;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            var userData = await _userManager.FindByNameAsync(user.Identity.Name);
            perusahaan = await dbcontext.Perusahaans.SingleOrDefaultAsync(x => x.UserId == userData.Id);
        }
        Permohonans = await
        dbcontext.Permohonans.Include(x => x.Perusahaan).ThenInclude(x=>x.Kabupaten).Where(x => x.Perusahaan.Id == perusahaan.Id).ToListAsync();
        await base.OnInitializedAsync();
    }

    private int totalPermohonans;

    private async Task OnReadData(DataGridReadDataEventArgs<Permohonan> e)
    {
        if (!e.CancellationToken.IsCancellationRequested)
        {
            List<Permohonan> response = null;
            // this can be call to anything, in this case we're calling a fictional api
            //var response = await Http.GetJsonAsync<Permohonan[]>( $"some-api/Permohonans?page={e.Page}&pageSize={e.PageSize}" );
            if (e.ReadDataMode is DataGridReadDataMode.Virtualize)
                response = await dbcontext.Permohonans.Skip(e.VirtualizeOffset).Take(e.VirtualizeCount).ToListAsync();
            else if (e.ReadDataMode is DataGridReadDataMode.Paging)
                response = await dbcontext.Permohonans.Skip((e.Page - 1) * e.PageSize).Take(e.PageSize).ToListAsync();
            else
                throw new Exception("Unhandled ReadDataMode");

            if (!e.CancellationToken.IsCancellationRequested)
            {
                totalPermohonans = await dbcontext.Permohonans.CountAsync();
                Permohonans = new List<Permohonan>(response); // an actual data for the current page
            }
        }
    }

    async Task Print(Permohonan dataModel)
    {
        printModel = dataModel;
       await Task.Delay(1000);
        await JS.InvokeVoidAsync("printpreview");

    }

    private Task NewModal()
    {
        model = new Permohonan();
        return modalRef.Show();
    }

    private Task HideModal()
    {
        return modalRef.Hide();
    }
    private Task EditModal(Permohonan data)
    {
        model = data;
        return modalRef.Show();
    }

    private async Task Save()
    {
        try
        {
            if (model.Id <= 0)
            {
                await dbcontext.Permohonans.AddAsync(model);
                await dbcontext.SaveChangesAsync();
                Permohonans.Add(model);
                await modalRef.Hide();
            }
            else
            {
                await dbcontext.SaveChangesAsync();
            }
        }
        catch (System.Exception ex)
        {
            await MessageService.Error(ex.Message);
        }
    }


    private async Task Delete(Permohonan model)
    {
        if (await MessageService.Confirm("Yakin Hapus Data ?", "Delete"))
        {
            dbcontext.Permohonans.Remove(model);
            await dbcontext.SaveChangesAsync();
            Permohonans.Remove(model);
        }
    }
}
